@page "/Market/Stocks"
@inject HttpClient _httpClient

<PageTitle>Markets</PageTitle>

<div class="container-fluid">
    <div class="row text-wrap">
        <TypeMenu/>
        @if (_API_TOKENs == null)
{
    <p><em>Loading...</em></p>
}
else
{
        <table class="table market-table">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Asset</th>
                    <th scope="col">Price</th>
                    <th scope="col">24h %</th>
                    <th scope="col">7d %</th>
                </tr>
            </thead>
            <tbody>
                    @foreach (var token in _API_TOKENs)
                    {
                        token.Symbol = token.Symbol.Replace("USDT", "");
                        var symbol = token.Symbol + ".svg";
                        <tr class="hover-ticker">
                    <td class="align-middle">1</td>
                            <td><img src="/img/crypto/@symbol" height="35" width="35" title="@token.Name" alt="@token.Name" class="align-middle" />
                                <div class="mx-2 align-middle d-inline-block"><div class="ticker-name">@token.Name</div>
                                <div class="ticker ticker-ticker">@token.Symbol</div>
                            </div>
                    </td>
                    <td class="align-middle">
                                @if (Convert.ToDouble(token.Price) > 1.00000000000000000001) {
                                    string price = string.Format("{0:### ### ###.##}", Convert.ToDouble(token.Price)).Replace(",", ".");
                                    @price;
                                }
                                else {
                                    string price = string.Format("{0:### ### ###0.##############}", Convert.ToDouble(token.Price)).Replace(",", ".");
                                    @price;
                                }
                    </td>
                    <td class="align-middle">@token.tfhc</td>
                    <td class="align-middle">@token.sdc%</td>
                </tr>
                    } 
            </tbody>
        </table>
}
    </div>
</div>

@code {
    private IEnumerable<TokenList>? _API_TOKENs;

    protected override async Task OnInitializedAsync()
    {
        _API_TOKENs = await _httpClient.GetFromJsonAsync<IEnumerable<TokenList>>("https://localhost:5071/Token/GetTokenList");
    }
}
