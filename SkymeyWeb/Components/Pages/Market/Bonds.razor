@page "/Market/Bonds"
@inject HttpClient _httpClient
@inject NavigationManager NavManager

<PageTitle>Markets</PageTitle>

<div class="container-fluid">
    <div class="row text-wrap">
        <TypeMenu IsActive="@IsActivePage" />
        @if (_API_BONDs == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table market-table">
                <thead>
                    <tr>
                        <th scope="col">Asset</th>
                        <th scope="col">Price</th>
                        <th scope="col">24h %</th>
                        <th scope="col">7d %</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var token in _API_BONDs)
                    {
                        token.Ticker = token.Ticker.Replace("USDT", "");
                        var symbol = token.Ticker + ".png";
                        <tr class="hover-ticker">
                            <td>
                                <img src="/img/bonds/@symbol" height="35" width="35" title="@token.Title" alt="@token.Title" class="align-middle" onerror="this.src='/img/bonds/alt.png';" />
                                <div class="mx-2 align-middle d-inline-block">
                                    <div class="ticker-name">@token.Title</div>
                                    <div class="ticker ticker-ticker">@token.Ticker</div>
                                </div>
                            </td>
                            <td class="align-middle">
                                @if (Convert.ToDouble(1) > 1.00000000000000000001) {
                                    string price = string.Format("{0:### ### ###.##}", Convert.ToDouble(1)).Replace(",", ".");
                                    @price;
                                }
                                else {
                                    string price = string.Format("{0:### ### ###0.##############}", Convert.ToDouble(1)).Replace(",", ".");
                                    @price;
                                }
                            </td>
                            <td class="align-middle">1</td>
                            <td class="align-middle">2</td>
                        </tr>
                    } 
                </tbody>
            </table>
        }
    </div>
</div>

@code {
    private IEnumerable<stock_bonds>? _API_BONDs;
    public string IsActivePage { get; set; } = default!;
    protected override async Task OnInitializedAsync()
    {
        IsActivePage = NavManager.ToBaseRelativePath(NavManager.Uri);
        _API_BONDs = await _httpClient.GetFromJsonAsync<IEnumerable<stock_bonds>>("https://localhost:5071/Bond/GetBondsParams?skip=0&take=50");
    }
}